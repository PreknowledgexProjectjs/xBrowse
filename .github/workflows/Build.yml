name: Build Executables

on: [push, pull_request]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js or Init
        uses: actions/setup-node@v1
        with:
          node-version: 16

      # - name: Install required build toolchain
      # if: matrix.os == 'ubuntu-latest'
      # run: sudo apt-get install gcc-multilib g++-multilib
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 60000
        env:
          ADBLOCK: true

      - name: Compile JSX
        run: yarn start:control

      - name: Get commit message
        run: echo "::set-output name=message::$(git log --no-merges -1 --oneline)"
        


      - name: Application Build on Windows
        if: matrix.os == 'windows-latest'
        run: yarn dist --win msi:x64
        env:
          GH_TOKEN: ${{ secrets.token }}

          MAC_CERTS: ${{ secrets.mac_certs }}
          MAC_CERTS_PASSWORD: ${{ secrets.mac_certs_password }}

          RELEASE: ${{ contains(steps.log.outputs.message, 'bump version') }}

      - name: Application Build on Linux
        if: matrix.os == 'ubuntu-latest'
        run: yarn dist --linux
        env:
          GH_TOKEN: ${{ secrets.token }}

          MAC_CERTS: ${{ secrets.mac_certs }}
          MAC_CERTS_PASSWORD: ${{ secrets.mac_certs_password }}

          RELEASE: ${{ contains(steps.log.outputs.message, 'bump version') }}

      - name: Application Build on macOS
        if: matrix.os == 'macos-latest'
        run: yarn dist --mac dmg:universal
        env:
          GH_TOKEN: ${{ secrets.token }}

          MAC_CERTS: ${{ secrets.mac_certs }}
          MAC_CERTS_PASSWORD: ${{ secrets.mac_certs_password }}

          RELEASE: ${{ contains(steps.log.outputs.message, 'bump version') }}
          
      - name: Upload Executables
        uses: actions/upload-artifact@v2
        with:
          name: pxbrowse-ejs-${{matrix.os}}
          path: |
            dist/